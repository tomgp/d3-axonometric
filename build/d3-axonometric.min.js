!function(n,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("d3-shape")):"function"==typeof define&&define.amd?define(["exports","d3-shape"],t):t(n.d3=n.d3||{},n.d3)}(this,function(n,t){"use strict";function r(){function n(n){return[(n[0]-n[2])*e,-n[1]+(n[0]+n[2])*r]}var t=Math.PI/8,r=Math.sin(t),e=Math.cos(t);return n.angle=function(o){return void 0===o?t:(t=o,r=Math.sin(t),e=Math.cos(t),n)},n}function e(){function n(n){var t=n.map(function(n){return e([o(n),i(n),u(n)])});return c(t)}var e=r(),o=function(n){return n[0]},i=function(n){return n[1]},u=function(n){return n[2]},c=t.line().x(function(n){return n[0]}).y(function(n){return n[1]});return n.projection=function(t){return void 0===t?e:(e=t,n)},n.pathGenerator=function(t){return void 0===t?c:(c=t,n)},n}function o(){function n(n,r){var e=t(n),o=t(r);return{x1:e[0],y1:e[1],x2:o[0],y2:o[1]}}var t=r();return n.projection=function(r){return void 0===r?t:(t=r,n)},n}function i(){function n(n){var r=n.map(function(n){return t(n)}),e=r.reduce(function(n,t){return void 0===n.x[0]?(n.x=[t[0],t[0]],n.y=[t[1],t[1]]):(n.x[0]=Math.min(t[0],n.x[0]),n.x[1]=Math.max(t[0],n.x[1]),n.y[0]=Math.min(t[1],n.y[0]),n.y[1]=Math.max(t[1],n.y[1])),n},{x:[],y:[]});return{x:e.x[0],y:e.y[0],width:e.x[1]-e.x[0],height:e.y[1]-e.y[0]}}var t=r();return n.projection=function(r){return void 0===r?t:(t=r,n)},n}t="default"in t?t.default:t,n.axonometricProjection=r,n.axonometricPath=e,n.axonometricLine=o,n.axonometricBounds=i,Object.defineProperty(n,"__esModule",{value:!0})});